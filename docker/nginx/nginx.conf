user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=webhook:10m rate=5r/s;

    # Upstream definitions
    upstream vitalflow_api {
        server vitalflow-api:5000;
        keepalive 32;
    }

    upstream vitalflow_automation {
        server vitalflow-automation:5001;
        keepalive 32;
    }

    upstream vitalflow_analytics {
        server vitalflow-analytics:5002;
        keepalive 32;
    }

    upstream n8n_backend {
        server n8n:5678;
        keepalive 32;
    }

    # Health check endpoint
    server {
        listen 80;
        server_name _;
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Main VitalFlow API
    server {
        listen 80;
        server_name api.vitalflow.local localhost;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";

        # API endpoints
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://vitalflow_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        # Health check
        location /health {
            proxy_pass http://vitalflow_api/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            access_log off;
        }

        # Static files
        location /static/ {
            alias /app/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Generated content
        location /generated/ {
            alias /app/generated_content/;
            expires 1d;
            add_header Cache-Control "public";
        }
    }

    # VitalFlow Automation Service
    server {
        listen 80;
        server_name automation.vitalflow.local;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        location / {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://vitalflow_automation;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        # Webhooks
        location /webhook/ {
            limit_req zone=webhook burst=5 nodelay;
            
            proxy_pass http://vitalflow_automation;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # VitalFlow Analytics Service
    server {
        listen 80;
        server_name analytics.vitalflow.local;

        # Security headers
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        location / {
            limit_req zone=api burst=15 nodelay;
            
            proxy_pass http://vitalflow_analytics;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 120s;
            proxy_connect_timeout 75s;
        }

        # Dashboard static files
        location /dashboard/static/ {
            proxy_pass http://vitalflow_analytics;
            expires 1h;
            add_header Cache-Control "public";
        }
    }

    # n8n Workflow Automation
    server {
        listen 80;
        server_name n8n.vitalflow.local;

        # Security headers
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # Increase client max body size for file uploads
        client_max_body_size 50M;

        location / {
            proxy_pass http://n8n_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        # n8n webhooks
        location /webhook/ {
            limit_req zone=webhook burst=10 nodelay;
            
            proxy_pass http://n8n_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Default server (catch-all)
    server {
        listen 80 default_server;
        server_name _;
        
        # Redirect to main API
        location / {
            return 301 http://api.vitalflow.local$request_uri;
        }
    }
}

# Stream block for TCP/UDP proxying (if needed)
stream {
    # PostgreSQL proxy (if external access needed)
    # server {
    #     listen 5432;
    #     proxy_pass postgres:5432;
    #     proxy_timeout 1s;
    #     proxy_responses 1;
    # }

    # Redis proxy (if external access needed)
    # server {
    #     listen 6379;
    #     proxy_pass redis:6379;
    #     proxy_timeout 1s;
    #     proxy_responses 1;
    # }
}

